openapi: 3.0.0
info:
  title: Your API Title
  description: Your API Description
  version: 1.0.0
security:
  - BearerAuth: []
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
consumes:
  - application/json
paths:
  /api/update:
    post:
      summary: ModifierProfile
      description: ''
      responses:
        '201':
          description: Created successfully
          content:
            application/json:
              schema: {}
              example: ''
      tags:
        - User
      parameters:
        - in: header
          name: User-Agent
          type: string
  '':
    post:
      summary: BloquerUser
      description: ''
      responses:
        '201':
          description: Created successfully
          content:
            application/json:
              schema: {}
              example: ''
      tags:
        - User
      parameters:
        - in: header
          name: User-Agent
          type: string
  /api/listClients:
    get:
      summary: lister les clients
      description: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: {}
              example: ''
      tags:
        - User
      parameters:
        - in: header
          name: User-Agent
          type: string
  /api/listJardinier:
    get:
      summary: lister les jardinier
      description: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: {}
              example: ''
      tags:
        - User
      parameters:
        - in: header
          name: User-Agent
          type: string
  /api/refresh:
    post:
      summary: Refresh
      description: ''
      responses:
        '201':
          description: Created successfully
          content:
            application/json:
              schema: {}
              example: ''
      tags:
        - User
      parameters:
        - in: header
          name: User-Agent
          type: string
  /api/logout:
    post:
      summary: Logout
      description: ''
      responses:
        '201':
          description: Created successfully
          content:
            application/json:
              schema: {}
              example: ''
      tags:
        - User
      parameters:
        - in: header
          name: User-Agent
          type: string
  /api/register:
    post:
      summary: Register
      description: ''
      responses:
        '201':
          description: Created successfully
          content:
            application/json:
              schema: {}
              example: ''
      tags:
        - User
      parameters:
        - in: header
          name: User-Agent
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                prenom:
                  type: string
                nom:
                  type: string
                image:
                  type: string
                adresse:
                  type: string
                telephone:
                  type: string
                email:
                  type: string
                password:
                  type: string
            example:
              prenom: AndrÃ© Demba
              nom: Ndione
              image: >-
                https://www.shutterstock.com/image-photo/professional-caucasian-landscaping-gardener-greenorange-260nw-2187705343.jpg
              adresse: Fasse
              telephone: 77-455-12-14
              email: andredembandione1@gmail.com
              password: '1234567'
  /api/login:
    post:
      summary: Login
      description: ''
      responses:
        '201':
          description: Created successfully
          content:
            application/json:
              schema: {}
              example: ''
      tags:
        - User
      parameters:
        - in: header
          name: User-Agent
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
            example:
              email: khady@email.fr
              password: '1234567'
